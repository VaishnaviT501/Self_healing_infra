version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - self_healing_infra

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx-exporter
    command: ["--nginx.scrape-uri=http://nginx:80/stub_status"]
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - self_healing_infra   # âœ… put exporter on same network as nginx

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - self_healing_infra

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - self_healing_infra

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    networks:
      - self_healing_infra

  webhook:
    build: ./webhook
    container_name: webhook
    ports:
      - "5001:5001"
    volumes:
      - ./ansible:/ansible
      - /var/run/docker.sock:/var/run/docker.sock 
    depends_on:
      - alertmanager
    networks:
      - self_healing_infra

networks:
  self_healing_infra:
    driver: bridge
